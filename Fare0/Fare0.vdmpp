\section {運賃計算クラス}
\index{うんちんけいさん@運賃計算}
要求仕様レベルの運賃計算仕様を表す。

\begin{vdm_al}
class 運賃計算 is subclass of 運賃表 --運賃計算クラスが運賃表クラスのサブクラスであることを示す。
\end{vdm_al}

\subsection {インスタンス変数}
\index{いんすたんすへんすう@インスタンス変数算}
s運賃表集合は運賃表のデータを保持するが、テストケースで運賃表のデータを与えるため、初期値は空集合にした。
\begin{vdm_al}
instance variables --インスタンス変数の定義。VDM++では、インスタンス変数のみが広域(グローバル)変数。
s運賃表集合 : 運賃表集合 := {}; --s運賃表集合は、他のクラスからはアクセスできないprivateな運賃表集合型のインスタンス変数で、初期値は空集合である。

operations
\end{vdm_al}

\subsection {運賃計算構成子}
\index{うんちんけいさんこうせいし@運賃計算構成子}
運賃計算オブジェクトの構成子。

\begin{vdm_al}
-- 構成子はクラスのインスタンスを生成する。引数なしの構成子は自動的に生成されるので、ここで定義する必要はない。
public 運賃計算 : 運賃表集合 ==> 運賃計算 --構成子の操作名と返り値の型名はクラス名と同じでなければならない。
運賃計算(a運賃表集合) == s運賃表集合 := a運賃表集合; --引数で受け取った内容を、インスタンス変数に代入(記号は":=")する。
\end{vdm_al}

\subsection {運賃を得る}
\index{うんちんをえる@運賃を得る}
2駅間の運賃を計算する。

\begin{vdm_al}
public 運賃を得る : 駅 * 駅 ==> 運賃 --操作「運賃を得る」の操作名と引数の型と返値の型を示す。引数がない場合、返り値がない場合は"()"を使用する。
運賃を得る(a駅1, a駅2) == --操作「運賃を得る」の、仮引数を示す。
	let w運賃レコード = 運賃表を検索する(s運賃表集合, a駅1, a駅2) in -- let式で、「運賃表を検索する」関数の返り値を「w運賃レコード」に束縛し、
	return w運賃レコード.f運賃 -- 運賃レコードのf運賃欄の値をreturn文で返している。
pre --操作の事前条件。操作の場合、事前条件は受け入れ可能な引数とインスタンス変数であることを保証する。
	運賃表集合に存在する(s運賃表集合, a駅1, a駅2)
post --操作の事後条件。操作の事後条件では、インスタンス変数を使用できる。
	exists1 w運賃レコード in set s運賃表集合 & --exists1は「1存在限量式」で、s運賃表集合の要素で'&'の後の条件式を満たす唯1つの要素「w運賃レコード」が存在することを主張する。
		{a駅1, a駅2} = {w運賃レコード.f駅1, w運賃レコード.f駅2} and
		RESULT = w運賃レコード.f運賃;

end 運賃計算
\end{vdm_al}

\begin{rtinfo}
{vdm.tc}[運賃計算]
\end{rtinfo}