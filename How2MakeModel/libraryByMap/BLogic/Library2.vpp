\section{オブジェクト指向モデル}
	\index{おぶじぇくとしこうもでる@オブジェクト指向モデル}
前節までのVDM++によるモデルは、classを定義しているとはいえ、
オブジェクト指向モデルとは言い難かった。

以下では、同じ例題をオブジェクト指向モデル化していく。

本や書庫や貸出は、クラス図\ref{fig:LibraryClassDiagram}で見るようにクラスとなり、図書館2クラスの外で定義する。
題名を得る()、著者を得る()、分野集合を得る()といった操作を本クラスで定義し、
蔵書を追加する()や蔵書を削除する()といった操作は書庫クラスで定義し、
本を貸す()や本を返す()操作は貸出クラスで定義する。
図書館2クラスは、書庫と貸出クラスをスーパークラスとしてその操作を継承し、
蔵書を追加する()や本を貸す()といった操作を使用する。

\begin{figure}[h]
	\centering
	{\includegraphics[width=55zw, keepaspectratio]{../libraryByMap/image/Library2ClassDiagram.jpg}}
	\caption{図書館2モデルのクラス図}
	\label{fig:LibraryClassDiagram}
	\index{としよかんもてるのくらすす@図書館2モデルのクラス図}
\end{figure}

今までの図書館クラス仕様は、本の内部構造を知らなければ書けない部分があったが、
今回の仕様は本クラスの操作名と機能だけを知っていれば書くことができる。
本クラスが変更されても、インタフェースさえ変わらなければ、図書館2クラスを変更する必要が無くなった。
オブジェクト指向により保守性が向上したことになる。

ただし、オブジェクト指向的でないVDM++モデルに比べ、オブジェクト指向的モデルは3倍ほど行数
	\index{おぶじぇくとしこうてきもでるのぎょうすう@オブジェクト指向的モデルの行数}
が増える傾向がある。
また、どう実現するかを含んだ設計仕様に近い内容を持つことになる。

モデルの全体を見通すには非オブジェクト指向的モデルの方が優れているし、
再利用性や保守性の必要な本格的モデルはオブジェクト指向的モデルの方が優れているということになろう。

\section{図書館2}
\begin{vdm_al}
class 図書館2 is subclass of 貸出情報

instance variables
private i書庫 : 書庫 := new 書庫();
private i貸出情報 : 貸出情報 := new 貸出情報();
\end{vdm_al}

\subsection{操作定義}

\subsubsection{インスタンス変数のアクセッサ}
\begin{vdm_al}
operations
public 蔵書を得る : () ==> 蔵書
蔵書を得る() == return i蔵書;

public 貸出を得る : () ==> 貸出
貸出を得る() == return i貸出;
\end{vdm_al}

\begin{vdm_al}
end 図書館2
\end{vdm_al}

\begin{rtinfo}
{vdm.tc}[図書館2]
\end{rtinfo}