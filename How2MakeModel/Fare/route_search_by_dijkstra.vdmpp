\section{ダイクストラ算法による路線検索}
\index{てつとうようたいくすとらさんぽう@鉄道用ダイクストラ算法}
ダイクストラ算法を呼び出すことによって最短経路を求める。

\begin{vdm_al}
class  ダイクストラ算法による路線検索 is subclass of 路線検索

operations
public ダイクストラ算法による路線検索 : 駅集合 * 路線単位集合 ==> ダイクストラ算法による路線検索
ダイクストラ算法による路線検索(a駅集合, a路線単位集合)== atomic (
	s駅集合 := a駅集合;
	s路線単位集合 := a路線単位集合
);
\end{vdm_al}

\subsection{最短経路}
\index{さいたんけいろ@最短経路}
ダイクストラ算法によって、最短経路を表す駅の列と、経路の距離を返す。

経路が繋がっていない場合は空列と距離0を返す。

\begin{vdm_al}
public 最短経路 : 駅 * 駅 ==> seq of 駅 * 距離
最短経路(a出発駅, a到着駅) == (
	dcl	w最短距離アルゴリズム : ダイクストラ算法 := new ダイクストラ算法(s路線単位集合, s駅集合);
	return w最短距離アルゴリズム.最短経路(a出発駅, a到着駅);
);

end ダイクストラ算法による路線検索
\end{vdm_al}

\begin{rtinfo}
{vdm.tc}[ダイクストラ算法による路線検索]
\end{rtinfo}