/*
 *　発番者
 *　責任：　指定した桁数の唯一の番号を発番する。ただし、その桁数をオーバーした場合は、最初の番号から、再び循環して発番を続ける。
*/
class 発番者 is subclass of 共通定義

values
初期値 = 0;

instance variables
protected 番号  : int := 初期値;		-- 次に発行する番号

operations
public 唯一の番号を得る : int * nat1 ==> int
唯一の番号を得る(数候補, 桁数) == 
	if 数候補 >= 10 ** 桁数 then 
		error
		--return 番号を初期化する() 
	else
		return 数候補;

-- 与えられた桁数内の唯一の番号を発番する。
public 発番する : int ==> 文字列
発番する(桁数) ==
	-- 呼び出し時の番号の値で発番し、自身の番号の値に 1 を加える。
	let	数 = 唯一の番号を得る(番号, 桁数),
		cobolstring = String`subStrFill("00000000000000000000",1,桁数-1, '0') ^ "9"
	in
	(
	番号 := 番号 + 1;
	return Integer`asStringZ(cobolstring)(数)
	);
	
public 番号を初期化する : () ==> int
番号を初期化する() == 
	(
	番号 := 初期値;
	return 番号
	);

end  発番者
