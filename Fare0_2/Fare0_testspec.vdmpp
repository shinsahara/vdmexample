\section {Testクラス}
\index{てすと@Test}
運賃検証用の単純な回帰テストケースである。

実用システムではVDM++用の回帰テストライブラリを使用するが、入門段階では説明しない。

エラーケースは、まだ考慮していない。

\begin{vdm_al}
class Test is subclass of 運賃 --Testクラスが運賃クラスのサブクラスであることを示す。

values --定数の定義
v運賃レコード集合 : set of 運賃レコード = { --定数「v運賃レコード集合」が運賃表集合型で、値が右辺の運賃レコードの集合であることを示す。
	mk_運賃レコード("東京", "品川", 220), --「mk_運賃レコード」は運賃レコード型のデータのインスタンスを作る。
	mk_運賃レコード("東京", "新宿", 180),
	mk_運賃レコード("新宿", "品川", 190)
};

functions
public run : () -> seq of bool
run() == 
	[t1(), t2(), t3(), t11()];

public t1 : () -> bool --1番目の回帰テストケースの操作。うまく行ったか否かをbool型で返す。
t1() == ( -- '('から')'までが1つのブロック分で、複数の文を記述できる。今は、1つのdef文が記述されていて、その中に、return文が記述されている。
	運賃を得る(v運賃レコード集合, "東京", "品川")  = 220 -- w運賃の「運賃を得る」をcallし、結果が220であればtrueをreturn文で返す。
);

public t2 : () -> bool
t2() == 
	運賃を得る(v運賃レコード集合, "東京", "新宿")  = 180;

public t3 : () -> bool
t3() == 
	運賃を得る(v運賃レコード集合, "新宿", "品川") = 190;

public t11 : () -> bool
t11() == 
	運賃を得る(v運賃レコード集合, "新宿", "品川")  = 200;
  	
end Test
\end{vdm_al}

\begin{rtinfo}
{vdm.tc}[Test]
\end{rtinfo}