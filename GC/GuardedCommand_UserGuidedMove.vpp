\section{ガードコマンド\_利用者案内有移動クラス}
利用者が案内されて移動するガードコマンド。

\begin{vdm_al}
class ガードコマンド_利用者案内有移動 is subclass of ガードコマンド_利用者

operations
public ガードコマンド_利用者案内有移動 : 場所グラフ`場所ID ==> ガードコマンド_利用者案内有移動
ガードコマンド_利用者案内有移動(a場所ID) == (
	s場所ID := a場所ID
);
\end{vdm_al}

\subsection{ガードコマンド\_利用者案内有移動のcheck}
場所に案内表示装置があれば、案内表示に従って移動する。
ある時間、案内表示に従わないこともある。
また、すでに移動した利用者の案内表示が残っているので、案内する利用者が適切かどうかチェックしている。

移動結果は、局所黒板の更新黒板属性に設定する。

\begin{vdm_al}
public check : 黒板 ==> ()
check (a大域黒板) == (
	def mk_(w黒板属性DB, w更新黒板属性DB) = a大域黒板.得る() in
	s局所黒板.全属性を設定する(w黒板属性DB, w更新黒板属性DB);
	def mk_(w黒板属性DB, -) = s局所黒板.得る();
		w場所グラフ = s局所黒板.s場所グラフ;
		w利用者のいる場所DB = w黒板属性DB(mk_token("実際の利用者居場所"));
		w利用者の居場所ID = s場所ID;
		w利用者集合 = dom (w利用者のいる場所DB :> {w利用者の居場所ID}) --この場所(w利用者の居場所ID)にいる利用者の集合
	in (
	if w利用者集合 = {} then return;
	if w場所グラフ.案内表示装置がある(w利用者の居場所ID) then (
		def w案内表示DB = w黒板属性DB(mk_token("案内表示"))in
		if w利用者の居場所ID in set dom w案内表示DB then	--案内されている
			def w案内表示 = w案内表示DB(w利用者の居場所ID);
				w利用者の移動先場所ID = w案内表示.sガイドする場所ID;
				w移動する利用者 = w案内表示.s案内する利用者;
				wドア位置 = mk_(w利用者の居場所ID, w利用者の移動先場所ID);
				wドアDB : map ドア`ドア位置 to ドア`ドア型= w黒板属性DB(mk_token("ドア"));
				w開くべきドア =  wドアDB(wドア位置)
			in (
			if	w開くべきドア.通過可能である() and 
				w場所グラフ.利用者が移動可能である(w利用者のいる場所DB, w利用者の移動先場所ID) and 
				案内すべき利用者である(w移動する利用者, w利用者集合) and
				w移動する利用者.移動する気になった時間である()
			then (
				ある場所の利用者を次の場所へ移動させる(
					w利用者のいる場所DB, w移動する利用者, w利用者の居場所ID, w利用者の移動先場所ID, 
					"実際の利用者居場所", "ガードコマンド_利用者案内有移動", "利用者が、案内表示に従って移動しました。");
			) --if
			) --def in
	) --if
	) --defnin
);

end ガードコマンド_利用者案内有移動
\end{vdm_al}

\begin{rtinfo}
{vdm.tc}[ガードコマンド_利用者案内有移動]
\end{rtinfo}