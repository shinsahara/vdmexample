\section{ガードコマンド\_センサークラス\_仮想世界}
センサーの仮想世界用ガードコマンド。

\begin{vdm_al}
class ガードコマンド_センサー_仮想世界 is subclass of ガードコマンド

instance variables
--public s人が居る位置 : センサー`人が居る位置;
public s場所ID : 場所グラフ`場所ID;

operations
public ガードコマンド_センサー_仮想世界 : 場所グラフ`場所ID ==> ガードコマンド_センサー_仮想世界
ガードコマンド_センサー_仮想世界(a場所ID) == (
	s場所ID := a場所ID
);
\end{vdm_al}

\subsection{ガードコマンド\_センサー\_仮想世界のcheck}
センサーに反応がない場所に居るはずの利用者を、仮想世界利用者居場所DBから削除する。

\begin{vdm_al}
public check : 黒板 ==> ()
check (a大域黒板) == (
	def mk_(w黒板属性DB, w更新黒板属性DB) = a大域黒板.得る() in
	s局所黒板.全属性を設定する(w黒板属性DB, w更新黒板属性DB);
	def mk_(w黒板属性DB, -) = s局所黒板.得る();
		w仮想利用者のいる場所DB = w黒板属性DB(mk_token("仮想世界利用者居場所"));
		w利用者の居場所ID = s場所ID;
		wセンサーDB = w黒板属性DB(mk_token("センサー"));
		wセンサー = wセンサーDB(w利用者の居場所ID);
		w利用者の居場所ID集合 = wセンサー.人が居る位置を得る();
		w仮想利用者集合 = dom (w仮想利用者のいる場所DB :> w利用者の居場所ID集合) --この場所集合(w利用者の居場所ID集合)にいる利用者の集合
	in
	if wセンサー.人は居ない() and w仮想利用者集合 <> {} then (
		/*	--実際と仮想世界の差が大きくなるため、今は、注釈として「ガードコマンド_センサー_仮想世界」が動かないようにしている。
		s局所黒板.更新黒板属性を設定する(mk_token("仮想世界利用者居場所"),  w仮想利用者集合 <-: w仮想利用者のいる場所DB);
		def - = debug >= 5 => new IO().echo(
				"\nセンサーに関知しないので、利用者を「仮想世界利用者居場所」から削除します。!!!" ^
				VDMUtil`val2seq_of_char[set of 利用者 * set of 場所グラフ`場所ID]
					(mk_(w仮想利用者集合, w利用者の居場所ID集合)) ^
				"\n") 
		in 
		*/
		skip
	) --if
);
\end{vdm_al}

\subsection{ガードコマンド\_センサー\_仮想世界のupdate}
局所黒板のセンサーDBと仮想世界利用者居場所DBを大域黒板に設定する。

\begin{vdm_al}
public update : 黒板 ==> ()
update(a大域黒板) == 
	def w更新黒板属性DB = s局所黒板.更新黒板属性を得る();
		w仮想世界利用者居場所DB = w更新黒板属性DB(mk_token("仮想世界利用者居場所"))
	in (
	a大域黒板.設定する(mk_token("仮想世界利用者居場所"), w仮想世界利用者居場所DB);
	skip
);

end ガードコマンド_センサー_仮想世界
\end{vdm_al}

\begin{rtinfo}
{vdm.tc}[ガードコマンド_センサー_仮想世界]
\end{rtinfo}